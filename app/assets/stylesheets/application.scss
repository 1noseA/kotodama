/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 *= require toastr
 *= require social-share-button
 */

@import "bootstrap";
@import 'font-awesome-sprockets';
@import 'font-awesome';
@import "toastr";

//カラーの変数を定義
$base-color: #a0d8ef;
$main-color: #ffffe0;
$sub-color: #9caeb7;
$btn-color: #2ca9e1;
$danger-color: #ff3333;

* {
  
}

header {
  background: $main-color;

  .nav-item {
    color: #555;
    text-align: center;
    &:hover {
      opacity: 0.8;
    }
  }
  .nav-text {
    color: #555;
  }
}

footer {
  background: $sub-color;
  .nav-text {
    color: #555;
    &:hover {
      opacity: 0.8;
    }
  }
}

body {
  background: $base-color;
  color: #555;
}

.user-image{
  border-radius: 50%;
}

// ボタン
.btn-add {
  border:1px solid;
  background: $btn-color;
  color: #fff;
  &:hover {
      opacity: 0.8;
      color: #fff;
  }
}

.btn-update {
  border:1px solid;
  color: $btn-color;
  &:hover {
      background: $btn-color;
      opacity: 0.8;
      color: #fff;
  }
}

.btn-delete {
  border:1px solid;
  color: $danger-color;
  &:hover {
      background: $danger-color;
      opacity: 0.8;
      color: #fff;
  }
}
.btn-move {
  border:1px solid;
  background: #777;
  color: #fff;
  &:hover {
      opacity: 0.8;
      color: #fff;
  }
}

.btn-search {
  border:1px solid;
  color: #555;
  &:hover {
      background: #555;
      opacity: 0.8;
      color: #fff;
  }
}

body {
  display: flex; //フレックスボックスに有効に
  flex-flow: column; //要素を縦に並べる
  min-height: 100vh; //最小でも画面の高さ分のbodyの高さを担保する
}
main {
  flex: 1; //画面の高さから他の同レイヤーの要素の高さを引いた値に
}

//ページネーション
.pagination{
  .page-item{
    .page-link{
      border-radius: 50%;
      color: #555;
      margin: 2px;
      &:hover{
      background: #777;
      color: #fff;
      }
    }
  }
  .active{
    .page-link{
      background: #777;
      border-color: #fff;
      border-radius: 50%;
      color: #fff;
    }  
  }
}

.info-image {
  border-radius: 50%;
}

.nav-link {
  color: #555;
}

.list-group-item {
  color: #555;
}